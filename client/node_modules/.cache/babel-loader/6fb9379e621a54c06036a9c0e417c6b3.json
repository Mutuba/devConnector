{"ast":null,"code":"var _jsxFileName = \"/Users/mutuba/Desktop/projects/devConnector/client/src/App.js\";\n// import React, { Fragment, useEffect } from \"react\";\n// import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n// import { Provider } from \"react-redux\";\n// import store from \"./store\";\n// import Navbar from \"./components/layout/Navbar\";\n// import Landing from \"./components/layout/Landing\";\n// import Register from \"./components/auth/Register\";\n// import Login from \"./components/auth/Login\";\n// import Alert from \"./components/layout/Alert\";\n// import { loadUser } from \"./actions/auth\";\n// import \"./App.css\";\n// import setAuthToken from \"./util/setAuthToken\";\n// if (localStorage.token) {\n//   setAuthToken(localStorage.token);\n// }\n// const App = () => {\n//   useEffect(() => {\n//     store.dispatch(loadUser());\n//   }, []);\n//   return (\n//     // fragment helps avoid unnecesary div\n//     <Provider store={store}>\n//       <Router>\n//         <Fragment>\n//           <Navbar />\n//           <Route exact path=\"/\" component={Landing} />\n//           <section className=\"container\">\n//             <Alert />\n//             <Switch>\n//               <Route exact path=\"/register\" component={Register} />\n//               <Route exact path=\"/login\" component={Login} />\n//             </Switch>\n//           </section>\n//         </Fragment>\n//       </Router>\n//     </Provider>\n//   );\n// };\n// export default App;\nimport React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Routes from './components/routing/Routes'; // Redux\n\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './util/setAuthToken';\nimport './App.css';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n  return /*#__PURE__*/React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Landing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    component: Routes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/mutuba/Desktop/projects/devConnector/client/src/App.js"],"names":["React","Fragment","useEffect","BrowserRouter","Router","Route","Switch","Navbar","Landing","Routes","Provider","store","loadUser","setAuthToken","localStorage","token","App","dispatch"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,MAAP,MAAmB,6BAAnB,C,CAEA;;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AAEA,OAAO,WAAP;;AAEA,IAAIC,YAAY,CAACC,KAAjB,EAAwB;AACtBF,EAAAA,YAAY,CAACC,YAAY,CAACC,KAAd,CAAZ;AACD;;AAED,MAAMC,GAAG,GAAG,MAAM;AAChBd,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CAACM,QAAN,CAAeL,QAAQ,EAAvB;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAEH,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEC,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAFF,CADF,CADF,CADF;AAaD,CAlBD;;AAoBA,eAAeO,GAAf","sourcesContent":["// import React, { Fragment, useEffect } from \"react\";\n// import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n// import { Provider } from \"react-redux\";\n// import store from \"./store\";\n// import Navbar from \"./components/layout/Navbar\";\n// import Landing from \"./components/layout/Landing\";\n// import Register from \"./components/auth/Register\";\n// import Login from \"./components/auth/Login\";\n// import Alert from \"./components/layout/Alert\";\n// import { loadUser } from \"./actions/auth\";\n// import \"./App.css\";\n// import setAuthToken from \"./util/setAuthToken\";\n// if (localStorage.token) {\n//   setAuthToken(localStorage.token);\n// }\n// const App = () => {\n//   useEffect(() => {\n//     store.dispatch(loadUser());\n//   }, []);\n//   return (\n//     // fragment helps avoid unnecesary div\n//     <Provider store={store}>\n//       <Router>\n//         <Fragment>\n//           <Navbar />\n//           <Route exact path=\"/\" component={Landing} />\n//           <section className=\"container\">\n//             <Alert />\n//             <Switch>\n//               <Route exact path=\"/register\" component={Register} />\n//               <Route exact path=\"/login\" component={Login} />\n//             </Switch>\n//           </section>\n//         </Fragment>\n//       </Router>\n//     </Provider>\n//   );\n// };\n// export default App;\n\n\nimport React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Routes from './components/routing/Routes';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './util/setAuthToken';\n\nimport './App.css';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Landing} />\n            <Route component={Routes} />\n          </Switch>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}