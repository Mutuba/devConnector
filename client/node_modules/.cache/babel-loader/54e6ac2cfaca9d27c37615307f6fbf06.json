{"ast":null,"code":"var _jsxFileName = \"/Users/mutuba/Desktop/projects/devConnector/client/src/components/posts/PostItem.js\";\nimport React, { Fragment, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport { connect } from \"react-redux\";\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  deletePost,\n  auth,\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    likes,\n    dislikes,\n    comments,\n    date\n  },\n  showActions\n}) => {\n  const {\n    _id: userId\n  } = auth.user || {};\n  const like = useCallback(() => {\n    const isliked = likes.find(obj => {\n      return obj.user === userId;\n    });\n    return isliked ? true : false;\n  }, [likes, userId]);\n  const dislike = useCallback(() => {\n    const disliked = dislikes.find(obj => {\n      return obj.user === userId;\n    });\n    return disliked ? true : false;\n  }, [dislikes, userId]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post bg-white p-1 my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/profile/${user}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"round-img\",\n    src: avatar,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, name))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, text), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"post-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Posted on \", /*#__PURE__*/React.createElement(Moment, {\n    format: \"YYYY/MM/DD\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, date)), showActions && /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"button1\",\n    onClick: () => {\n      addLike(_id, userId);\n    },\n    type: \"button\",\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-thumbs-up\",\n    style: {\n      color: like() ? \"green\" : \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fa-fa-thumbs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, likes.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 38\n    }\n  }, likes.length))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      removeLike(_id, userId);\n    },\n    type: \"button\",\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-thumbs-down\",\n    style: {\n      color: dislike() ? \"green\" : \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fa-fa-thumbs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, dislikes.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 41\n    }\n  }, dislikes.length))), /*#__PURE__*/React.createElement(Link, {\n    to: `/posts/${_id}`,\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, \"Discussion\", \" \", comments.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"comment-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, comments.length)), !auth.loading && user === auth.user._id && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => deletePost(_id),\n    type: \"button\",\n    className: \"btn btn-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, \"Remove Post\"))));\n};\n\nPostItem.defaultProps = {\n  showActions: true\n};\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n  // getPost: PropTypes.func.isRequired,\n  showActions: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike,\n  deletePost\n})(PostItem);","map":{"version":3,"sources":["/Users/mutuba/Desktop/projects/devConnector/client/src/components/posts/PostItem.js"],"names":["React","Fragment","useCallback","PropTypes","Link","Moment","connect","addLike","removeLike","deletePost","PostItem","auth","post","_id","text","name","avatar","user","likes","dislikes","comments","date","showActions","userId","like","isliked","find","obj","dislike","disliked","color","length","loading","defaultProps","propTypes","object","isRequired","func","bool","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,UAA9B,QAAgD,oBAAhD;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAChBH,EAAAA,OADgB;AAEhBC,EAAAA,UAFgB;AAGhBC,EAAAA,UAHgB;AAIhBE,EAAAA,IAJgB;AAKhBC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,IAAP;AAAaC,IAAAA,IAAb;AAAmBC,IAAAA,MAAnB;AAA2BC,IAAAA,IAA3B;AAAiCC,IAAAA,KAAjC;AAAwCC,IAAAA,QAAxC;AAAkDC,IAAAA,QAAlD;AAA4DC,IAAAA;AAA5D,GALU;AAMhBC,EAAAA;AANgB,CAAD,KAOX;AACJ,QAAM;AAAET,IAAAA,GAAG,EAAEU;AAAP,MAAkBZ,IAAI,CAACM,IAAL,IAAa,EAArC;AAEA,QAAMO,IAAI,GAAGtB,WAAW,CAAC,MAAM;AAC7B,UAAMuB,OAAO,GAAGP,KAAK,CAACQ,IAAN,CAAWC,GAAG,IAAI;AAChC,aAAOA,GAAG,CAACV,IAAJ,KAAaM,MAApB;AACD,KAFe,CAAhB;AAGA,WAAOE,OAAO,GAAG,IAAH,GAAU,KAAxB;AACD,GALuB,EAKrB,CAACP,KAAD,EAAQK,MAAR,CALqB,CAAxB;AAOA,QAAMK,OAAO,GAAG1B,WAAW,CAAC,MAAM;AAChC,UAAM2B,QAAQ,GAAGV,QAAQ,CAACO,IAAT,CAAcC,GAAG,IAAI;AACpC,aAAOA,GAAG,CAACV,IAAJ,KAAaM,MAApB;AACD,KAFgB,CAAjB;AAGA,WAAOM,QAAQ,GAAG,IAAH,GAAU,KAAzB;AACD,GAL0B,EAKxB,CAACV,QAAD,EAAWI,MAAX,CALwB,CAA3B;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,YAAWN,IAAK,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,GAAG,EAAED,MAAhC;AAAwC,IAAA,GAAG,EAAC,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAL,CAFF,CADF,CADF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBD,IAArB,CADF,eAEE;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACY,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BO,IAA7B,CADZ,CAFF,EAMGC,WAAW,iBACV,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,EAAE,EAAC,SADL;AAEE,IAAA,OAAO,EAAE,MAAM;AACbf,MAAAA,OAAO,CAACM,GAAD,EAAMU,MAAN,CAAP;AACD,KAJH;AAKE,IAAA,IAAI,EAAC,QALP;AAME,IAAA,SAAS,EAAC,eANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AACE,IAAA,SAAS,EAAC,kBADZ;AAEE,IAAA,KAAK,EAAE;AACLO,MAAAA,KAAK,EAAEN,IAAI,KAAK,OAAL,GAAe;AADrB,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAaK,GAbL,eAcE;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KAAK,CAACa,MAAN,GAAe,CAAf,iBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOb,KAAK,CAACa,MAAb,CADvB,CAdF,CADF,eAmBE;AACE,IAAA,OAAO,EAAE,MAAM;AACbvB,MAAAA,UAAU,CAACK,GAAD,EAAMU,MAAN,CAAV;AACD,KAHH;AAIE,IAAA,IAAI,EAAC,QAJP;AAKE,IAAA,SAAS,EAAC,eALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AACE,IAAA,SAAS,EAAC,oBADZ;AAEE,IAAA,KAAK,EAAE;AACLO,MAAAA,KAAK,EAAEF,OAAO,KAAK,OAAL,GAAe;AADxB,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAaE;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,QAAQ,CAACY,MAAT,GAAkB,CAAlB,iBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOZ,QAAQ,CAACY,MAAhB,CAD1B,CAbF,CAnBF,eAoCE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,UAASlB,GAAI,EAAxB;AAA2B,IAAA,SAAS,EAAC,iBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACa,GADb,EAEGO,QAAQ,CAACW,MAAT,GAAkB,CAAlB,iBACC;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCX,QAAQ,CAACW,MAA1C,CAHJ,CApCF,EA0CG,CAACpB,IAAI,CAACqB,OAAN,IAAiBf,IAAI,KAAKN,IAAI,CAACM,IAAL,CAAUJ,GAApC,iBACC;AACE,IAAA,OAAO,EAAE,MAAMJ,UAAU,CAACI,GAAD,CAD3B;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,SAAS,EAAC,gBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBA3CJ,CAPJ,CAPF,CADF;AAuED,CA/FD;;AAiGAH,QAAQ,CAACuB,YAAT,GAAwB;AACtBX,EAAAA,WAAW,EAAE;AADS,CAAxB;AAIAZ,QAAQ,CAACwB,SAAT,GAAqB;AACnBtB,EAAAA,IAAI,EAAET,SAAS,CAACgC,MAAV,CAAiBC,UADJ;AAEnBzB,EAAAA,IAAI,EAAER,SAAS,CAACgC,MAAV,CAAiBC,UAFJ;AAGnB7B,EAAAA,OAAO,EAAEJ,SAAS,CAACkC,IAAV,CAAeD,UAHL;AAInB5B,EAAAA,UAAU,EAAEL,SAAS,CAACkC,IAAV,CAAeD,UAJR;AAKnB3B,EAAAA,UAAU,EAAEN,SAAS,CAACkC,IAAV,CAAeD,UALR;AAMnB;AACAd,EAAAA,WAAW,EAAEnB,SAAS,CAACmC;AAPJ,CAArB;;AAUA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChC7B,EAAAA,IAAI,EAAE6B,KAAK,CAAC7B;AADoB,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CACpBiC,eADoB,EAEpB;AAAEhC,EAAAA,OAAF;AAAWC,EAAAA,UAAX;AAAuBC,EAAAA;AAAvB,CAFoB,CAAP,CAGbC,QAHa,CAAf","sourcesContent":["import React, { Fragment, useCallback } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport { connect } from \"react-redux\";\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  deletePost,\n  auth,\n  post: { _id, text, name, avatar, user, likes, dislikes, comments, date },\n  showActions\n}) => {\n  const { _id: userId } = auth.user || {};\n\n  const like = useCallback(() => {\n    const isliked = likes.find(obj => {\n      return obj.user === userId;\n    });\n    return isliked ? true : false;\n  }, [likes, userId]);\n\n  const dislike = useCallback(() => {\n    const disliked = dislikes.find(obj => {\n      return obj.user === userId;\n    });\n    return disliked ? true : false;\n  }, [dislikes, userId]);\n\n  return (\n    <div className=\"post bg-white p-1 my-1\">\n      <div>\n        <Link to={`/profile/${user}`}>\n          <img className=\"round-img\" src={avatar} alt=\"\" />\n          <h4>{name}</h4>\n        </Link>\n      </div>\n      <div>\n        <p className=\"my-1\">{text}</p>\n        <p className=\"post-date\">\n          Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\n        </p>\n\n        {showActions && (\n          <Fragment>\n            <button\n              id=\"button1\"\n              onClick={() => {\n                addLike(_id, userId);\n              }}\n              type=\"button\"\n              className=\"btn btn-light\"\n            >\n              <i\n                className=\"fas fa-thumbs-up\"\n                style={{\n                  color: like() ? \"green\" : \"black\"\n                }}\n              />{\" \"}\n              <span className=\"fa-fa-thumbs\">\n                {likes.length > 0 && <span>{likes.length}</span>}\n              </span>\n            </button>\n            <button\n              onClick={() => {\n                removeLike(_id, userId);\n              }}\n              type=\"button\"\n              className=\"btn btn-light\"\n            >\n              <i\n                className=\"fas fa-thumbs-down\"\n                style={{\n                  color: dislike() ? \"green\" : \"black\"\n                }}\n              />\n              <span className=\"fa-fa-thumbs\">\n                {dislikes.length > 0 && <span>{dislikes.length}</span>}\n              </span>\n            </button>\n            <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\n              Discussion{\" \"}\n              {comments.length > 0 && (\n                <span className=\"comment-count\">{comments.length}</span>\n              )}\n            </Link>\n            {!auth.loading && user === auth.user._id && (\n              <button\n                onClick={() => deletePost(_id)}\n                type=\"button\"\n                className=\"btn btn-danger\"\n              >\n                Remove Post\n              </button>\n            )}\n          </Fragment>\n        )}\n      </div>\n    </div>\n  );\n};\n\nPostItem.defaultProps = {\n  showActions: true\n};\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n  // getPost: PropTypes.func.isRequired,\n  showActions: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps,\n  { addLike, removeLike, deletePost }\n)(PostItem);\n"]},"metadata":{},"sourceType":"module"}